#cloud-config
package_update: true
packages:
  - mariadb105
  - nginx
  - socat

runcmd:
  - |
    cat > /etc/profile.d/app_env.sh <<'EOF'
    export MYSQL_PRIMARY_HOST='${primary_host}'
    export MYSQL_READ_REPLICA_HOST='${read_replica_host}'
    export MYSQL_PORT='${port}'
    export MYSQL_USERNAME='${username}'
    export MYSQL_PASSWORD='${password}'
    export MYSQL_DB_NAME='${db_name}'
    export MYSQL_TIMEOUT='${timeout}'
    export MYSQL_RDS_PROXY='${enable_rds_proxy}'
    EOF

  - |
    cat > /usr/local/bin/app1_handler.sh <<'EOF'
    #!/bin/bash
    set -euo pipefail
    source /etc/profile.d/app_env.sh
    ERROR_OUTPUT=$(mysql -h "$MYSQL_PRIMARY_HOST" -P "$MYSQL_PORT" -u "$MYSQL_USERNAME" -p"$MYSQL_PASSWORD" -e "SELECT 1;" --init-command="SET SESSION wait_timeout=$MYSQL_TIMEOUT" --ssl "$MYSQL_DB_NAME" 2>&1)

    if [ $? -eq 0 ]; then
    printf "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\nApp 1: MySQL Primary OK (via RDS Proxy: $MYSQL_RDS_PROXY)"
    else
      printf "HTTP/1.1 503 Service Unavailable\r\nContent-Type: text/plain\r\n\r\nApp 1: MySQL Primary (via RDS Proxy: $MYSQL_RDS_PROXY) ERROR:\n$ERROR_OUTPUT"
    fi
    EOF

  - |
    cat > /usr/local/bin/app2_handler.sh <<'EOF'
    #!/bin/bash
    set -euo pipefail
    source /etc/profile.d/app_env.sh
    ERROR_OUTPUT=$(mysql -h "$MYSQL_READ_REPLICA_HOST" -P "$MYSQL_PORT" -u "$MYSQL_USERNAME" -p"$MYSQL_PASSWORD" -e "SELECT 1;" --init-command="SET SESSION wait_timeout=$MYSQL_TIMEOUT" --ssl "$MYSQL_DB_NAME" 2>&1)

    if [ $? -eq 0 ]; then
      printf "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\n\r\nApp 2: MySQL Read Replica OK"
    else
      printf "HTTP/1.1 503 Service Unavailable\r\nContent-Type: text/plain\r\n\r\nApp 2: MySQL Read Replica ERROR:\n$ERROR_OUTPUT"
    fi
    EOF

  - |
    cat > /usr/local/bin/app1.sh <<'EOF'
    #!/bin/bash
    socat TCP-LISTEN:8081,reuseaddr,fork EXEC:"/usr/local/bin/app1_handler.sh"
    EOF

  - |
    cat > /usr/local/bin/app2.sh <<'EOF'
    #!/bin/bash
    socat TCP-LISTEN:8082,reuseaddr,fork EXEC:"/usr/local/bin/app2_handler.sh"
    EOF

  - chmod u+x /usr/local/bin/app1_handler.sh /usr/local/bin/app2_handler.sh
  - chmod u+x /usr/local/bin/app1.sh /usr/local/bin/app2.sh
  - nohup /usr/local/bin/app1.sh > /var/log/app1.log 2>&1 &
  - nohup /usr/local/bin/app2.sh > /var/log/app2.log 2>&1 &

  - |
    cat > /etc/nginx/nginx.conf <<'EOF'
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;

    events {
      worker_connections 1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  text/plain;
      keepalive_timeout  60;

      server {
        listen 0.0.0.0:80;

        location /app1 {
          proxy_pass http://localhost:8081;
        }

        location /app2 {
          proxy_pass http://localhost:8082;
        }

        location / {
          return 200 "NGINX Health: OK: MaD GrEEtz! #End2EndBurner";
        }
      }
    }
    EOF
  - systemctl enable nginx
  - systemctl restart nginx

